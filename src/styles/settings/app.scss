$respond-to-no-mediaqueries-fallback: phone;
$respond-to-fallback-class: lt-ie9;
$respond-to-breakpoints: (
  large "screen and (max-width: 1090px)",
  medium "screen and (max-width: 821px)",
  small "screen and (max-width: 649px)",
  half "screen and (max-width: 500px)"
);
@mixin respond-to($medias...) {
  $breakpoints-length: length($respond-to-breakpoints);

  @each $media in $medias {
    $had-a-hit: false;

    @for $i from 1 through $breakpoints-length {
      $breakpoint: nth($respond-to-breakpoints, $i);
      @if $media == nth($breakpoint, 1) {
        $definition: nth($breakpoint, 2);
        $had-a-hit: true;
        @media #{$definition} {
          @content;
        }
      }
    }

    @if $media == $respond-to-no-mediaqueries-fallback {
      .#{$respond-to-fallback-class} & {
        @content;
      }
    }

    @if $had-a-hit == false {
      @warn "Media #{media} not found!";
    }
  }
}

body,
*:not(svg, path) {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 14px;
  color: #333;
}

a {
  cursor: pointer;
}

img {
  display: block;
  width: 100%;
  height: auto;
}

.box-page-detail {
  padding-bottom: 60px;
}

a.link-disable {
  cursor: no-drop;
  background-color: #e1e1e1;
}

.label-new-right {
  &::after {
    content: "New";
    font-size: 11px;
    background-color: #ff7b7b;
    color: #fff;
    border-radius: 2px;
    padding: 2px 5px;
    line-height: 1;
    position: absolute;
    right: 0;
    top: 0;
  }
}

.td-algin-left {
  text-align: left;
}

.line-height-1_5 {
  line-height: 1.5 !important;
}

.box-warning {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  &::before {
    content: "";
    position: absolute;
    background-color: lightgrey;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  }

  .inner {
    max-width: 400px;
    width: 100%;
    padding: 12px;
    border-radius: 6px;
    min-height: 160px;
    border: 1px solid #ebebeb;
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    box-shadow: 3px 3px 10px #00000029;
    background-color: #f1f1f1;
    position: relative;
    z-index: 999999;
  }

  &__memo {
    font-size: 16px;
    text-align: center;
    margin-bottom: 16px;
  }
  button {
    border: 1px solid #c1c1c1;
    padding: 6px 16px;
    background-color: #68937d;
    color: #fff;

    &:hover {
      background-color: #316e4f;
    }
  }
}

.filter__control--is-disabled {
  background-color: rgb(217 217 217 / 18%) !important;
}

.react-tooltip {
  text-align: left !important;
  z-index: 1;
  span {
    color: #ffffff !important;
    font-weight: normal;
    line-height: normal;
  }
}
